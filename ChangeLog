next:
	- Support for python 3.5 dropped.

2.1.2:
	- Do not default to AF_UNIX under windows.  Thanks to jmarcet.
	  https://github.com/jsbronder/asyncio-dgram/pull/12

2.1.1:
	- Fixed type-hint for DatagramStream's drained parameter.  Thanks to
	  spumer for the report.
	  https://github.com/jsbronder/asyncio-dgram/issues/11

2.1.0:
	- Type hints added
	- DatagramStream.send() renamed to DatagramStream._send().  This should be
	  backward compatible as both DatagramServer and DatagramClient were
	  overloading it.

2.0.0:
	- TransportClosed exception raised from send/recv if the other end hung
	  up.  https://github.com/jsbronder/asyncio-dgram/issues/9

1.2.0:
	- Added support for python 3.5

1.1.1:
	- Add license to setup.py [Fabian Affolter]

1.1.0:
	- AF_UNIX support added for python 3.7+

1.0.1:
	- bind() no longer explicitly disables SO_REUSEADDR as upstream deprecated
	the option.

1.0.0:
	- bind() no longer sets SO_REUSEADDR by default.  See upstream discussion
	for rationale, https://bugs.python.org/issue37228

	- DatagramStream.send() will now wait for the asyncio write buffer to
	drain below the highwater mark before returning.  This mimics the
	forthcoming behavior from upstream, https://bugs.python.org/issue38242
